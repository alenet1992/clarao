/// A list of named breakpoints. You can use these with the `breakpoint()` mixin to quickly create media queries.
/// @type Map
$breakpoints: (
  small: 0,
  xsmall:550px,
  xxsmall: 750px,
  medium: 950px,
  xmedium: 1150px,
  xxmedium: 1280px,
  large: 1370px,
  xlarge: 1580px,
  xxlarge: 1925px,
  retin: 2500px,
  xretin: 3000px,
) !default;


///@type Keyword: The largest named breakpoint in which to include print as a media type
$print-breakpoint: medium !default;

///Map the breakpoints
$-ntg-zero-breakpoint: small !default;
$-ntg-breakpoints-keys: map-to-list($breakpoints, 'keys');

@if nth(map-values($breakpoints), 1) != 0 {
  @warn 'Your smallest breakpoint (defined in $breakpoints) must be set to "0".';
}@else {
  $-ntg-zero-breakpoint: nth(map-keys($breakpoints), 1);
}

///@type List: All of the names in this list will be output as classes in your CSS, like `.small-12`, `.medium-6`, and so on. Each value in this list must also be in the `$breakpoints` map.
$breakpoint-classes: (small xsmall xxsmall medium xmedium xxmedium large xlarge xxlarge) !default;


@function breakpoint($val: $-ntg-zero-breakpoint) {
  // Size or keyword
  $bp: nth($val, 1);
  // Value for max-width media queries
  $bp-max: 0;
  // Direction of media query (up, down, or only) - se encontrar mais que uma palavra no var entao o dir é essa palavra; else é "up"
  $dir: if(length($val) > 1, nth($val, 2), up);
  // Eventual output
  $str: '';
  // Is it a named media query?
  $named: false;

  // Try to pull a named breakpoint out of the $breakpoints map
  @if type-of($bp) == 'string' {
    @if map-has-key($breakpoints, $bp) {
      @if $dir == 'only' or $dir == 'down' {
        $bp-max: -ntg-map-next($breakpoints, $bp);
      }

      $bp: map-get($breakpoints, $bp);
      $named: true;
    }@else {
      $bp: 0;
      @warn 'breakpoint(): "#{$val}" is not defined in your $breakpoints setting.';
    }
  }


  // Conditions to skip media query creation
  // - It's a named breakpoint that resolved to "0 down" or "0 up"
  // - It's a numeric breakpoint that resolved to "0 " + anything
  @if $bp > 0px or $dir == 'only' or $dir == 'down' {
    // `only` ranges use the format `(min-width: n) and (max-width: n)`
    @if $dir == 'only' {
      // Only named media queries can have an "only" range
      @if $named == true {
        // Only use "min-width" if the floor is greater than 0
        @if $bp > 0px {
          $str: $str + '(min-width: #{$bp})';

          // Only add "and" to the media query if there's a ceiling
          @if $bp-max != null {
            $str: $str + ' and ';
          }
        }

        // Only use "max-width" if there's a ceiling
        @if $bp-max != null {
          $str: $str + '(max-width: #{$bp-max})';
        }
      }@else {
        @warn 'breakpoint(): Only named media queries can have an `only` range.';
      }
    }

    // `down` ranges use the format `(max-width: n)`
    @else if $dir == 'down' {
      $max: if($named, $bp-max, $bp);

      // Skip media query creation if input value is exactly "0 down",
      // unless the function was called as "small down", in which case it's just "small only"
      @if $named or $bp > 0px {
        @if $max != null {
          $str: $str + '(max-width: #{$max})';
        }
      }
    }

    // `up` ranges use the format `(min-width: n)`
    @else if $bp > 0px {
      $str: $str + '(min-width: #{$bp})';
    }
  }

  @return $str;
}


@mixin breakpoint($value) {
  $str: breakpoint($value);
  $bp: index($-ntg-breakpoints-keys, $value);
  $pbp: index($-ntg-breakpoints-keys, $print-breakpoint);

  $old-ntg-size: null;

  // Make breakpoint size available as a variable
  @if global-variable-exists(-ntg-size) {
    $old-ntg-size: $-ntg-size;
  }
  $-ntg-size: nth($value, 1) !global; // get the first value to account for `only` and `down` keywords

  // If $str is still an empty string, no media query is needed
  @if $str == '' {
    @content;
  }@else {// Otherwise, wrap the content in a media query
    // For named breakpoints less than or equal to $print-breakpoint, add print to the media types
    @if $bp != null and $bp <= $pbp {
      @media print, screen and #{$str} {
        @content;
       }
    }@else {
      @media screen and #{$str} {
        @content;
      }
    }
  }

  @if $old-ntg-size != null {
    // Restore the old breakpoint size
    $-ntg-size: $old-ntg-size !global;
  } @else {
    $-ntg-size: null !global;
  }
}
